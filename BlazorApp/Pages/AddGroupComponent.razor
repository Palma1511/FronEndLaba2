@page "/group/add"

@using System.Net.Http
@inject HttpClient Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@using Domain.DTO

<PageTitle>Добавить</PageTitle>

<h3>Добавление новой категории</h3>

<div class="form-group row mb-3">
    <label for="ID" class="form-label">Название группы</label>
    <input @bind="NameGroup" placeholder="Название" class="form-control @inputStatus" id="ID" />
    <div class="invalid-feedback">
        Группа уже существует
    </div>
    <div class="valid-feedback">
        Группа добавлена
    </div>
</div>
<div class="form-group row mb-3">
    <label for="Students" class="form-label">Студент</label>
    <select @bind=studID class="form-select" id="Students" disabled="@is_disabled">
        <option value="" selected>Добавить студента...</option>
        @foreach (var stud in Students)
        {
            <option value="@stud.Id">@stud.Name</option>
        }
    </select>
</div>
<div class="mb-3">
    @if (studID == "")
    {
        <button class="btn btn-success" @onclick="AddStudForm">
            <span class="oi oi-plus" aria-hidden="true"></span>
        </button>
    }
    else
    {
        <button class="btn btn-warning" @onclick="EditStudForm">
            <span class="oi oi-pencil" aria-hidden="true"></span>
        </button>
        <button class="btn btn-danger" @onclick="DeleteStud">
            <span class="oi oi-trash" aria-hidden="true"></span>
        </button>
    }
</div>
@if (is_edit || is_add)
{
    <div class="form-group row mb-3">
        <div class="form-group row mb-3">
            <label for="StudName" class="form-label">Имя</label>
            <input @bind="StudName" placeholder="Имя" class="form-control" id="StudName" />
        </div>
        <div class="form-group row mb-3">
            <label for="Surname" class="form-label">Фамилия</label>
            <input @bind="Surname" placeholder="Фамилия" class="form-control" id="Surname" />
        </div>
        <div class="form-group">
            @if (is_add)
            {
                <button class="btn btn-success" @onclick="AddStud">Добавить студента</button>
            }
            else
            {
                <button class="btn btn-warning" @onclick="EditStud">Изменить студента</button>
            }
        </div>
    </div>
}
<div class="form-group">
    <button @onclick="AddGroup" class="btn btn-success">Добавить</button>
</div>


@code {
    private string NameGroup;
    private string inputStatus;
    private string studID = "";
    private bool is_disabled = false;
    private bool is_add = false;
    private bool is_edit = false;
    private string StudName;
    private string Surname;
    private List<StudentDto> Students = new List<StudentDto>();

    protected async Task AddGroup()
    {
        var response = (await Http.GetAsync($"https://localhost:7298/api/Group")).StatusCode;
        if (response == System.Net.HttpStatusCode.NotFound)
        {
            var group = new GroupDto { NameGroup = NameGroup, Students = Students };
            await Http.PostAsJsonAsync("https://localhost:7298/api/Group", group);
            NameGroup = "";
            inputStatus = "is-valid";
        }
        else
        {
            inputStatus = "is-invalid";
        }
    }

    private async Task AddStudForm()
    {
        is_disabled = true;
        is_add = true;
    }

    private async Task EditStudForm()
    {
        foreach (var exist_stud in Students)
        {
            if (exist_stud.Id.ToString() == studID)
            {
                StudName = exist_stud.Name;
                Surname = exist_stud.Surname;
                is_disabled = true;
                is_edit = true;
                break;
            }
        }
    }

    private async Task AddStud()
    {
        var toy = new StudentDto { Name = StudName, Group = NameGroup, Surname = Surname };
        Students.Add(toy);
        StudName = "";
        Surname = "";
        is_disabled = false;
        is_add = false;
    }

    private async Task EditStud()
    {
        foreach (var exist_stud in Students)
        {
            if (exist_stud.Id.ToString() == studID)
            {
                exist_stud.Name = StudName;
                exist_stud.Surname = Surname;
                StudName = "";
                Surname = "";
                is_disabled = false;
                is_edit = false;
                break;
            }
        }
    }

    private async Task DeleteStud()
    {
        foreach (var exist_stud in Students)
        {
            if (exist_stud.Id.ToString() == studID)
            {
                Students.Remove(exist_stud);
                break;
            }
        }
    }
}